name: Test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
    - staging
    - trying
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  RunTests:
    strategy:
      fail-fast: false
      matrix:
        python:
        - '3.8'
        - '3.10'
        server:
        - mir_kiosk
        - ubuntu_frame
        - confined_shell
        - mir_test_tools
        - mir_demo_server
        include:
        - python: '3.10'
          server: null
          mark: self

    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}

    - uses: actions/checkout@v3

    - id: pytest-args
      name: Determine pytest arguments
      run: |
        ARGS=( --verbose --capture=no )
        [ -n '${{ matrix.server }}' ] && ARGS+=( -k ${{ matrix.server }} )
        [ -n '${{ matrix.mark }}' ] && ARGS+=( -m ${{ matrix.mark }} )
        echo args=${ARGS[@]} >> $GITHUB_OUTPUT

    - name: Set up dependencies
      working-directory: frame
      run: |
        pip install -r requirements.txt
        python -m pytest ${{ steps.pytest-args.outputs.args }} --deps

    - name: Run the tests
      working-directory: frame
      run: |
        # set up coredumps
        ulimit -c unlimited
        echo "/tmp/corefile-%e-%p-%t" | sudo tee /proc/sys/kernel/core_pattern

        sudo adduser $USER video
        sudo adduser $USER input

        sg video "
          sg input '
            python -m pytest ${{ steps.pytest-args.outputs.args }} --junitxml=junit-${{ matrix.server || matrix.mark }}-${{ matrix.python }}.xml
          '
        "

    - name: Upload junit report
      uses: actions/upload-artifact@v3
      if: success() || failure()
      with:
        name: test-results
        path: frame/junit-*.xml

    - if: ${{ failure() }}
      name: Collect any core dumps
      run: |
        sudo find /tmp/ -name corefile-* -exec chown $UID {} \; -exec mv -v {} . \;

    - if: ${{ failure() }}
      name: Upload any core dumps
      uses: actions/upload-artifact@v3
      with:
        name: core-dumps
        path: corefile-*
        if-no-files-found: ignore

    - if: ${{ failure() && runner.debug }}
      name: Setup upterm session
      uses: lhotari/action-upterm@v1
      with:
        limit-access-to-actor: true
