name: Test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
    - staging
    - trying
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  RunTests:
    strategy:
      fail-fast: false
      matrix:
        server:
        - mir-kiosk
        - ubuntu-frame
        include:
        - server: confined-shell
          channel: edge

    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - uses: actions/checkout@v3

    - name: Set up dependencies
      run: |
        sudo apt-get --yes --no-install-recommends install \
          gedit \
          gsettings-desktop-schemas \
          qtwayland5 \
          qterminal \
          xvfb

        sudo snap install ${{ matrix.server }} ${{ matrix.channel && format('--channel {0}', matrix.channel) || '' }}
        [ -x /snap/${{ matrix.server }}/current/bin/setup.sh ] && sudo /snap/${{ matrix.server }}/current/bin/setup.sh
        sudo snap connect ${{ matrix.server }}:graphics-core22 mesa-core22 || true

        SNAPS="
          mir-kiosk-kodi
          mir-kiosk-neverputt
          mir-kiosk-scummvm
          wpe-webkit-mir-kiosk
        "

        sudo snap install $SNAPS

        for snap in $SNAPS; do
          if [ -x /snap/$snap/current/bin/setup.sh ]; then
            /snap/$snap/current/bin/setup.sh
          else
            sudo snap connect $snap:wayland ${{ matrix.server }}
          fi
        done

        pip install -r frame/requirements.txt

    - name: Run the tests
      working-directory: frame
      run: |
        # set up coredumps
        ulimit -c unlimited
        echo "/tmp/corefile-%e-%p-%t" | sudo tee /proc/sys/kernel/core_pattern

        xvfb-run python -m pytest -k ${{ matrix.server }} --junitxml=junit-${{ matrix.server }}.xml

    - name: Upload junit report
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: test-results
        path: frame/junit-${{ matrix.server }}.xml

    - if: ${{ failure() }}
      name: Collect any core dumps
      run: |
        sudo find /tmp/ -name corefile-* -exec chown $UID {} \; -exec mv -v {} . \;

    - if: ${{ failure() }}
      name: Upload any core dumps
      uses: actions/upload-artifact@v3
      with:
        name: core-dumps
        path: corefile-*
        if-no-files-found: ignore

    - if: ${{ failure() && runner.debug }}
      name: Setup upterm session
      uses: lhotari/action-upterm@v1
      with:
        limit-access-to-actor: true
